## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

#Store card holder personal details
member.datasource.url=jdbc:postgresql://192.168.1.81:5432/membersdb
member.datasource.username=postgres
member.datasource.password=docker
member.datasource.driver-class-name=org.postgresql.Driver

#member.jpa.show-sql=false
#member.jpa.hibernate.ddl-auto=update
#member.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


#card number  (cardholder id, cardnumber)
cardholder.datasource.url=jdbc:mariadb://192.168.1.81:3306/cardholderdb?createDatabaseIfNotExist=true
cardholder.datasource.username=marcos
cardholder.datasource.password=marcos_9090
cardholder.datasource.driverClassName=org.mariadb.jdbc.Driver

#cardholder.jpa.show-sql=true
#cardholder.jpa.hibernate.ddl-auto=update
#cardholder.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect


#expiration date (card id, expiration month, expiration year)
card.datasource.url=jdbc:mariadb://192.168.1.81:3306/carddb?createDatabaseIfNotExist=true
card.datasource.username=marcos
card.datasource.password=marcos_9090
card.datasource.driverClassName=org.mariadb.jdbc.Driver

#card.jpa.show-sql=true
#card.jpa.hibernate.ddl-auto=update
#card.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

spring.jpa.generate-ddl=true
spring.jpa.show-sql=true


# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
#spring.datasource.url=jdbc:mariadb://localhost:3306/test
#spring.datasource.username=root
#spring.datasource.password=
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
#spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop
# Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

